/*
void					print_parse(t_node *node)
{
	if (node)
	{
		if (node->kind == NODE_SEMI_AND)
		{
			printf("( %c", node->spec.sep_op_command->kind);
			if (node->spec.sep_op_command->left)
				print_parse(node->spec.sep_op_command->left);
			if (node->spec.sep_op_command->right)
				print_parse(node->spec.sep_op_command->right);
			printf(")");
			print_redir(reverse_redirection(node->redir));

		}
		else if (node->kind == NODE_AND_OR || node->kind == NODE_PIPE)
		{
			printf("( %s ", token_name(node->spec.and_or_command->kind));
			if (node->spec.and_or_command->left)
				print_parse(node->spec.and_or_command->left);
			if (node->spec.and_or_command->right)
				print_parse(node->spec.and_or_command->right);
			printf(")\n");
			print_redir(reverse_redirection(node->redir));

		}
		else if (node->kind == NODE_SIMPLE_COMMAND)
		{
			printf(" ");
			print_list_tokens(node->spec.simple_command);
			print_redir(reverse_redirection(node->redir));
		}
	} else {
		printf("Something went wrong while printing the ast");
	}
}

void    test_parse()
{

	const char *tests[] = {
		"1 >file something 2>&1",
		"ls -la | cat -e | grep sh",
		"echo 1 ; (2 && (ls -la; echo amine)) || (3 && (ls && (echo karim || echo ahmed)))",
		"(ls -la; echo karim) > file ",
		"ls -la | {cat -e; ls -la} >file",
		"(ls -la; echo karim) | cat -e",
		"{ls -la | ls -la } > file",
		"echo $name",
		"echo $(ls -la && echo $(ls -la ')' \")\"))karim ls -la",
		"echo ${name}",
		"echo $(ls -la)",
		"ls -la && echo karim | cat -e",
	};
	for (const char **it = tests; it != tests + sizeof(tests)/sizeof(*tests); it++) {
		init_stream(*it);
		t_node *node = parse_commands();
		print_parse(node);
		printf("\n\n===========================================\n\n");
	}
	// if (g_token.kind != TOKEN_EOF)
	//     syntax_error("Syntax error near %c\n", g_token.kind);
}

*/

(ls -la && ech karim) | cat -e
total 416$
drwxr-xr-x   20 amoutik  candidate     680 Jan 21 19:38 .$
drwxr-xr-x   94 amoutik  candidate    3196 Jan 21 18:35 ..$
-rw-r--r--@   1 amoutik  candidate    6148 Jan 21 17:29 .DS_Store$
drwxr-xr-x   13 amoutik  candidate     442 Jan 21 19:38 .git$
-rwxr-xr-x    1 amoutik  candidate      58 Dec 31 10:06 .gitignore$
drwxr-xr-x    3 amoutik  candidate     102 Jan 19 13:54 .vscode$
-rwxr-xr-x    1 amoutik  candidate  164892 Jan 21 19:38 42sh$
-rw-rw-rw-    1 amoutik  candidate    2540 Jan 21 15:48 Makefile$
-rw-rw-rw-    1 amoutik  candidate       1 Jan 20 17:25 README.md$
drwxr-xr-x    5 amoutik  candidate     170 Jan 12 12:45 Testing$
-rw-rw-rw-    1 amoutik  candidate      17 Jan 20 18:25 auteur$
drwxr-xr-x   56 amoutik  candidate    1904 Jan 21 19:38 bin$
-rw-r--r--    1 amoutik  candidate    1274 Jan 21 19:36 file$
-rw-r--r--    1 amoutik  candidate     237 Jan 20 18:09 file.c$
drwxr-xr-x    7 amoutik  candidate     238 Jan 11 15:14 includes$
drwxr-xr-x  115 amoutik  candidate    3910 Jan 21 19:38 libft$
-rw-r--r--@   1 amoutik  candidate     203 Jan 10 16:01 print.c$
-rw-r--r--    1 amoutik  candidate    1211 Jan 12 16:12 sighub.c$
drwxr-xr-x@  11 amoutik  candidate     374 Jan 19 14:50 srcs$
-rw-r--r--    1 amoutik  candidate    4033 Jan 16 19:37 test.c$
ech: Command not dfound$
ech: Command not dfound$



ls || (&&)
ls && ||


((ls -la && echo karim) && (ls -la || echo ahmed)) > file

bash-5.0$ eval "$BASH_COMMAND"
